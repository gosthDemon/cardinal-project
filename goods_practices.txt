1.-We will use snake_case for PHP, HTML, CSS and camelCase for JS.

2.-In HTML, classes will be separated by a single-hyphen, while IDs and names will be separated by an underscore. 

3.-The vars will be writing in english. if you don't know how to write it, google translate will be used.

4.-For HTML, Class and IDs or Names will always be written first with the  the var name and after element tipe



require...
{

// "laravel/framework": "^8.75",
}


1.- En primer lugar, usa solo identificadores en inglés. Mejor User que Usuario. Así, de paso, practicas un poco el idioma universal de la informática.

2.- Modelos: Los nombres de los modelos deben ser iguales a los de las tablas de la base de datos, pero en singular, en CamelCase y con mayúscula.

Ejemplo: RegisteredUser

3.- Controladores: Llámalos como los modelos, pero añadiendo la palabra “controller”.

Ejempo: RegisteredUserController

4.- Métodos: Se nombran en camelCase yt empezando con minúscula.

Ejemplo: RegisteredUser::getAll()

5.- Atributos: Se nombran en en snake_case y empezando con minúscula.

Ejemplo: RegisteredUser::first_name

6.- Variables: Los identificadores deben ir en camelCase y empezando con minúscula. En plural si se trata de una colección y en singular si es un objeto individual o una variable simple.

Ejemplos: bannedUsers (colección, en plural), articleContent (objeto individual, en sigular)

7.- Tablas: Se nombran en plural y en snake_case.

Ejemplo: registered_users.

7.1.- Columnas de las tablas: Se nombran en snake_case, sin referencia al nombre de la tabla.

Ejemplo: first_name

7.1.1.- Clave primaria: La llamaremos id. Siempre. No le des más vueltas. id y punto. El tipo: integer y auto-increment.

7.1.2.- Claves ajenas: Se forman con el nombre de la tabla ajena en singular más la palabra id. Ejemplo: article_id

7.1.3.- Timestamps: Laravel siempre crea marcas de tiempo para todo. Y siempre se llaman created_at y updated_at, de tipo datetime. Acostúmbrate a tenerlas en todas tus tablas.

8.- Tablas pivote: Son esas tablas horribles formadas como resultado de una relación N:N entre dos tablas maestras. Se nombran en snake_case, en plural y orden alfabético. Ejemplo: articles_users será el pivote entre las tablas articles y users.